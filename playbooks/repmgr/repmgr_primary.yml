---
- name: Configure and set up repmgr on the primary (master)
  hosts: master_nodes
  become: yes
  vars_files:
    - ../vars/repmgr.yml
    
  tasks:
    - name: Install required Python libraries (Debian/Ubuntu)
      apt:
        name: python3-psycopg2
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Create repmgr database
      community.postgresql.postgresql_db:
        name: "{{ repmgr_db }}"
        state: present
        login_port: 6588
      become_user: postgres

    - name: Create repmgr user
      community.postgresql.postgresql_user:
        name: "{{ repmgr_user }}"
        password: "{{ repmgr_password }}"
        login_port: 6588
        db: "{{ repmgr_db }}"
        role_attr_flags: 'LOGIN,REPLICATION'
        state: present
      become_user: postgres

    - name: Create repmgr extension
      community.postgresql.postgresql_query:
        db: "{{ repmgr_db }}"
        login_port: 6588
        query: "CREATE EXTENSION IF NOT EXISTS repmgr;"
      become_user: postgres

    - name: Grant usage on the repmgr schema
      community.postgresql.postgresql_privs:
        db: "{{ repmgr_db }}"
        objs: "repmgr"
        privs: "USAGE"
        type: schema
        roles: "{{ repmgr_user }}"
        login_port: 6588
        state: present
      become_user: postgres

    - name: Grant ALL on all tables in repmgr schema
      community.postgresql.postgresql_privs:
        db: "{{ repmgr_db }}"
        schema: "repmgr"
        objs: "ALL_IN_SCHEMA"
        type: table
        roles: "{{ repmgr_user }}"
        privs: "ALL"
        login_port: 6588
        state: present
      become_user: postgres

    - name: Grant ALL on sequences in repmgr schema
      community.postgresql.postgresql_privs:
        db: "{{ repmgr_db }}"
        schema: "repmgr"
        objs: "ALL_IN_SCHEMA"
        type: sequence
        roles: "{{ repmgr_user }}"
        privs: "ALL"
        login_port: 6588
        state: present
      become_user: postgres
      
    - name: Ensure PostgreSQL (master) listens on all interfaces
      lineinfile:
        path: /etc/postgresql/12/main/postgresql.conf
        regexp: '^#?listen_addresses\s*=\s*.*'
        line: "listen_addresses = '*'"
        backup: yes

    - name: Ensure pglogical is in shared_preload_libraries
      lineinfile:
        path: /etc/postgresql/12/main/postgresql.conf
        regexp: '^#?shared_preload_libraries\s*='
        line: "shared_preload_libraries = 'pglogical'"
        backup: yes

    - name: Configure PostgreSQL settings for pglogical
      blockinfile:
        path: /etc/postgresql/12/main/postgresql.conf
        block: |
          wal_level = 'logical'
          max_replication_slots = 10
          max_wal_senders = 10
          track_commit_timestamp = on
          
    - name: Restart PostgreSQL immediately
      systemd:
        name: "{{ repmgr_service_name }}"
        state: restarted

    - name: Ensure pg_hba.conf on master allows repmgr
      blockinfile:
        path: /etc/postgresql/12/main/pg_hba.conf
        insertafter: '^# IPv4 local connections:'
        block: |
          host  {{ repmgr_db }}   {{ repmgr_user }}  {{ network_subnet_master }}  md5  port=6588
          host  replication       {{ repmgr_user }}  {{ network_subnet_master }}  md5  port=6588
          host  {{ repmgr_db }}   {{ repmgr_user }}  {{ network_subnet_worker1 }}  md5  port=6588
          host  replication       {{ repmgr_user }}  {{ network_subnet_worker1 }}  md5  port=6588
          host  {{ repmgr_db }}   {{ repmgr_user }}  {{ network_subnet_worker2 }}  md5  port=6588
          host  replication       {{ repmgr_user }}  {{ network_subnet_worker2 }}  md5  port=6588
          host  {{ repmgr_db }}   {{ repmgr_user }}  {{ worker1_private_ip }}  md5  port=6588
          host  replication       {{ repmgr_user }}  {{ worker1_private_ip }}  md5  port=6588
          host  {{ repmgr_db }}   {{ repmgr_user }}  {{ worker2_private_ip }}  md5  port=6588
          host  replication       {{ repmgr_user }}  {{ worker2_private_ip }}  md5  port=6588
          host  {{ repmgr_db }}   {{ repmgr_user }}  127.0.0.1/32  md5  port=6588
          host  replication       {{ repmgr_user }}  127.0.0.1/32  md5  port=6588
          host {{ repmgr_db }}    {{ repmgr_user }}  {{ master_private_ip }}/24   md5  port=6588
          host replication        {{ repmgr_user }}  {{ master_private_ip }}/24   md5  port=6588
          host {{ repmgr_db }}    {{ repmgr_user }}  {{ master_private_ip }}/24   md5
          host replication        {{ repmgr_user }}  {{ master_private_ip }}/24   md5
          host    replication     pglogical_user    0.0.0.0/0     md5  port=6588
          host    all             pglogical_user    0.0.0.0/0     md5  port=6588
    - name: Reload PostgreSQL
      systemd:
        name: "{{ repmgr_service_name }}"
        state: reloaded

    - name: Ensure /etc/repmgr/12 directory exists
      file:
        path: "/etc/repmgr/12"
        state: directory
        owner: postgres
        group: postgres
        mode: '0755'

    - name: Place repmgr.conf on master
      template:
        src: ../templates/repmgr.conf.j2
        dest: "{{ repmgr_config_path }}"
        owner: postgres
        group: postgres
        mode: '0644'
      vars:
        node_id: "{{ repmgr_node_id }}"    # from inventory
        node_name: "{{ repmgr_node_name }}" # from inventory
        conninfo: "host={{ master_private_ip }} dbname={{ repmgr_db }} user={{ repmgr_user }} password={{ repmgr_password }} port=6588"
        config_path_for_template: "{{ repmgr_config_path }}"
        service_name: "{{ repmgr_service_name }}"

    - name: Ensure PostgreSQL is started on master
      systemd:
        name: "{{ repmgr_service_name }}"
        state: started
        enabled: yes

    - name: Register master node with repmgr
      shell: >
        sudo -u postgres repmgr
        -f {{ repmgr_config_path }}
        primary register --force
      register: primary_register
      failed_when: "primary_register.rc not in [0,1]"
      changed_when: primary_register.rc == 0

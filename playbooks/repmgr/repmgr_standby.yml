---
- name: Configure repmgr on standby (worker) nodes
  hosts: worker_nodes
  become: yes

  vars_files:
    - ../vars/repmgr.yml

  tasks:
    - name: Ensure PostgreSQL listens on all interfaces (standby)
      lineinfile:
        path: /etc/postgresql/12/main/postgresql.conf
        regexp: '^#?listen_addresses\s*=\s*.*'
        line: "listen_addresses = '*'"
        backup: yes
        
    - name: Ensure pglogical is in shared_preload_libraries
      lineinfile:
        path: /etc/postgresql/12/main/postgresql.conf
        regexp: '^#?shared_preload_libraries\s*='
        line: "shared_preload_libraries = 'pglogical'"
        backup: yes

    - name: Configure PostgreSQL settings for pglogical
      blockinfile:
        path: /etc/postgresql/12/main/postgresql.conf
        block: |
          wal_level = 'logical'
          max_replication_slots = 10
          max_wal_senders = 10
          wal_keep_segments = 256
          track_commit_timestamp = on
          wal_log_hints = on

    - name: Ensure pg_hba.conf allows repmgr
      blockinfile:
        path: /etc/postgresql/12/main/pg_hba.conf
        insertafter: '^# IPv4 local connections:'
        block: |
          host  {{ repmgr_db }}   {{ repmgr_user }}  {{ network_subnet_master }}  md5
          host  replication       {{ repmgr_user }}  {{ network_subnet_master }}  md5
          host  {{ repmgr_db }}   {{ repmgr_user }}  {{ network_subnet_worker1 }}  md5
          host  replication       {{ repmgr_user }}  {{ network_subnet_worker1 }}  md5
          host  {{ repmgr_db }}   {{ repmgr_user }}  {{ network_subnet_worker2 }}  md5
          host  replication       {{ repmgr_user }}  {{ network_subnet_worker2 }}  md5
          host    replication     pglogical_user    0.0.0.0/0     md5
          host    all             pglogical_user    0.0.0.0/0     md5

    - name: Restart PostgreSQL immediately
      systemd:
        name: "{{ repmgr_service_name }}"
        state: restarted

    - name: Ensure /etc/repmgr/12 directory exists
      file:
        path: "/etc/repmgr/12"
        state: directory
        owner: postgres
        group: postgres
        mode: '0755'

    - name: Place repmgr.conf on standby
      template:
        src: ../templates/repmgr.conf.j2
        dest: "{{ repmgr_config_path }}"
        owner: postgres
        group: postgres
        mode: '0644'
      vars:
        node_id: "{{ repmgr_node_id }}"
        node_name: "{{ repmgr_node_name }}"
        conninfo: "host={{ master_private_ip }} dbname={{ repmgr_db }} user={{ repmgr_user }} password={{ repmgr_password }}"
        config_path_for_template: "{{ repmgr_config_path }}"
        service_name: "{{ repmgr_service_name }}"

    - name: Stop PostgreSQL before cloning (if running)
      systemd:
        name: "{{ repmgr_service_name }}"
        state: stopped
      ignore_errors: true

    - name: Clone standby from master
      shell: >
        sudo -u postgres env PGPASSWORD={{ repmgr_password }}
        repmgr
        -h {{ master_private_ip }}
        -U {{ repmgr_user }}
        -d {{ repmgr_db }}
        -f {{ repmgr_config_path }}
        standby clone
        {% if copy_ext_config | bool %} --copy-external-config-files {% endif %}
        --force

    - name: Start PostgreSQL on standby
      systemd:
        name: "{{ repmgr_service_name }}"
        state: started
        enabled: yes

    - name: Register standby node with repmgr
      shell: >
        sudo -u postgres repmgr
        -f {{ repmgr_config_path }}
        standby register
      register: standby_register
      failed_when: "standby_register.rc not in [0,1]"
      changed_when: standby_register.rc == 0

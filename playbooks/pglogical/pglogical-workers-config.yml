- name: Create pglogical Node on Standby
  hosts: worker_nodes
  become: yes
  tasks:
    # - name: Promote standby node to read-write mode
    #   shell: "/usr/lib/postgresql/12/bin/pg_ctl promote -D /var/lib/postgresql/12/main"
    #   become_user: postgres
    #   ignore_errors: yes

    # - name: Wait for promotion to complete
    #   pause:
    #     seconds: 10

    - name: Check if node is already configured
      community.postgresql.postgresql_query:
        db: pglogical_db
        query: "SELECT node_name FROM pglogical.node WHERE node_name = '{{ ansible_hostname }}1';"
        login_port: 6588
      become_user: postgres
      register: node_check

    - name: Add standby node to pglogical
      community.postgresql.postgresql_query:
        db: pglogical_db
        query: |
          SELECT pglogical.create_node(
            node_name := '{{ ansible_hostname }}1',
            dsn := 'host={{ worker_private_ip }} port=6588 dbname=pglogical_db user=pglogical_user password=securepassword'
          );
        login_port: 6588
      become_user: postgres
      when: node_check.rowcount == 0
      ignore_errors: yes

    - name: Grant USAGE on pglogical schema to pglogical_user
      community.postgresql.postgresql_privs:
        db: pglogical_db
        privs: "USAGE"
        type: schema
        roles: pglogical_user
        objs: pglogical
        login_port: 6588
        state: present
      become_user: postgres

    # - name: Revert standby node to recovery mode
    #   shell: "/usr/lib/postgresql/12/bin/pg_ctl restart -D /var/lib/postgresql/12/main -m fast"
    #   become_user: postgres
    #   ignore_errors: yes

    # - name: Wait for PostgreSQL to start
    #   pause:
    #     seconds: 10

    - name: Subscribe to primary node
      community.postgresql.postgresql_query:
        db: pglogical_db
        query: |
          SELECT pglogical.create_subscription(
            subscription_name := 'subscription_{{ ansible_hostname }}1',
            provider_dsn := 'host={{ master_private_ip }} port=6588 dbname=pglogical_db user=pglogical_user password=securepassword'
          );
        login_port: 6588
      become_user: postgres

    - name: Subscribe to other standby nodes
      community.postgresql.postgresql_query:
        db: pglogical_db
        query: |
          SELECT pglogical.create_subscription(
            subscription_name := 'subscription_{{ ansible_hostname }}1',
            provider_dsn := 'host={{ other_worker_private_ip }} port=6588 dbname=pglogical_db user=pglogical_user password=securepassword'
          );
        login_port: 6588
      become_user: postgres

